<?php
/**
 * Magento
 *
 * NOTICE OF LICENSE
 *
 * This source file is subject to the Academic Free License (AFL 3.0)
 * that is bundled with this package in the file LICENSE_AFL.txt.
 * It is also available through the world-wide-web at this URL:
 * http://opensource.org/licenses/afl-3.0.php
 * If you did not receive a copy of the license and are unable to
 * obtain it through the world-wide-web, please send an email
 * to license@magento.com so we can send you a copy immediately.
 *
 * DISCLAIMER
 *
 * Do not edit or add to this file if you wish to upgrade Magento to newer
 * versions in the future. If you wish to customize Magento for your
 * needs please refer to http://www.magento.com for more information.
 *
 * @category    design
 * @package     rwd_default
 * @copyright   Copyright (c) 2006-2014 X.commerce, Inc. (http://www.magento.com)
 * @license     http://opensource.org/licenses/afl-3.0.php  Academic Free License (AFL 3.0)
 */

/**
 * Product view template
 *
 * @see Mage_Catalog_Block_Product_View
 * @see Mage_Review_Block_Product_View
 */
?>
<?php $_helper = $this->helper('catalog/output'); ?>
<?php $_product = $this->getProduct(); ?>
<script type="text/javascript">
    var optionsPrice = new Product.OptionsPrice(<?php echo $this->getJsonConfig() ?>);
</script>
<div id="messages_product_view"><?php echo $this->getMessagesBlock()->toHtml() ?></div>
<div class="product-view">
    <div class="product-essential">
        <form action="<?php echo $this->getSubmitUrl($_product) ?>" method="post" id="product_addtocart_form"<?php if($_product->getOptions()): ?> enctype="multipart/form-data"<?php endif; ?>>
            <?php echo $this->getBlockHtml('formkey') ?>
            <div class="no-display">
                <input type="hidden" name="product" value="<?php echo $_product->getId() ?>" />
                <input type="hidden" name="related_product" id="related-products-field" value="" />
            </div>

            <div class="product-img-box">
                <div class="product-name">
                    <h1><?php echo $_helper->productAttribute($_product, $_product->getName(), 'name') ?></h1>
                </div>
                <?php echo $this->getChildHtml('media') ?>
            </div>

            <div class="product-shop">
                <div class="product-name">
                    <span class="h1"><?php echo $_helper->productAttribute($_product, $_product->getName(), 'name') ?></span>
                </div>

                <div class="price-info">
                    <?php echo $this->getPriceHtml($_product); ?>
                    <?php echo $this->getChildHtml('bundle_prices') ?>
                    <?php echo $this->getTierPriceHtml() ?>
                </div>

                <div class="extra-info">
                    <?php echo $this->getReviewsSummaryHtml($_product, 'default', false)?>
                    <?php echo $this->getChildHtml('product_type_availability'); ?>
                </div>

                <?php echo $this->getChildHtml('alert_urls') ?>

                <?php if ($_product->getShortDescription()):?>
                    <div class="short-description">
                        <div class="std"><?php echo $_helper->productAttribute($_product, nl2br($_product->getShortDescription()), 'short_description') ?></div>
                    </div>
                <?php endif;?>




                <?php echo $this->getChildHtml('other');?>

                <?php if ($_product->isSaleable() && $this->hasOptions()):?>
                    <?php echo $this->getChildChildHtml('container1', '', true, true) ?>
                <?php endif;?>

            </div>

            <div class="add-to-cart-wrapper">
                <?php echo $this->getChildHtml('product_type_data') ?>
                <?php echo $this->getChildHtml('extrahint') ?>

                <?php if (!$this->hasOptions()):?>
                    <div class="add-to-box">
                        <?php if($_product->isSaleable()): ?>
                            <?php echo $this->getChildHtml('addtocart') ?>
                            <?php if( $this->helper('wishlist')->isAllow() || $_compareUrl=$this->helper('catalog/product_compare')->getAddUrl($_product)): ?>
                                <span class="or"><?php echo $this->__('OR') ?></span>
                            <?php endif; ?>
                        <?php endif; ?>

                        <?php echo $this->getChildHtml('addto') ?>
                        <?php echo $this->getChildHtml('sharing') ?>
                    </div>
                    <?php echo $this->getChildHtml('extra_buttons') ?>
                <?php elseif (!$_product->isSaleable()): ?>
                    <div class="add-to-box">
                        <?php echo $this->getChildHtml('addto') ?>
                        <?php echo $this->getChildHtml('sharing') ?>
                    </div>
                <?php endif; ?>
            </div>

            <?php echo $this->getChildHtml('related_products') ?>

            <div class="clearer"></div>
            <?php if ($_product->isSaleable() && $this->hasOptions()):?>
                <?php echo $this->getChildChildHtml('container2', '', true, true) ?>
            <?php endif;?>
        </form>
        <script type="text/javascript">
            //<![CDATA[
            var productAddToCartForm = new VarienForm('product_addtocart_form');
            productAddToCartForm.submit = function(button, url) {
                if (this.validator.validate()) {
                    var form = this.form;
                    var oldUrl = form.action;

                    if (url) {
                        form.action = url;
                    }
                    var e = null;
                    try {
                        this.form.submit();
                    } catch (e) {
                    }
                    this.form.action = oldUrl;
                    if (e) {
                        throw e;
                    }

                    if (button && button != 'undefined') {
                        button.disabled = true;
                    }
                }
            }.bind(productAddToCartForm);

            productAddToCartForm.submitLight = function(button, url){
                if(this.validator) {
                    var nv = Validation.methods;
                    delete Validation.methods['required-entry'];
                    delete Validation.methods['validate-one-required'];
                    delete Validation.methods['validate-one-required-by-name'];
                    // Remove custom datetime validators
                    for (var methodName in Validation.methods) {
                        if (methodName.match(/^validate-datetime-.*/i)) {
                            delete Validation.methods[methodName];
                        }
                    }

                    if (this.validator.validate()) {
                        if (url) {
                            this.form.action = url;
                        }
                        this.form.submit();
                    }
                    Object.extend(Validation.methods, nv);
                }
            }.bind(productAddToCartForm);
            //]]>
        </script>
    </div>

    <div class="product-collateral toggle-content tabs">
        <?php if ($detailedInfoGroup = $this->getChildGroup('detailed_info', 'getChildHtml')):?>
            <dl id="collateral-tabs" class="collateral-tabs">
                <?php foreach ($detailedInfoGroup as $alias => $html):?>
                    <dt class="tab"><span><?php echo $this->escapeHtml($this->getChildData($alias, 'title')) ?></span></dt>
                    <dd class="tab-container">
                        <div class="tab-content"><?php echo $html ?></div>
                    </dd>
                <?php endforeach;?>
            </dl>
        <?php endif; ?>
    </div>

    <?php echo $this->getChildHtml('upsell_products') ?>
    <?php echo $this->getChildHtml('product_additional_data') ?>

</div>
<script type="text/javascript">
    var fragmentsUrl = "'" + '<?php echo $this->getAddToCartUrl($_product) ?>' + "'";
    jQuery(".add-to-cart-calc").click(function(){
        var calculator = jQuery(this).parents().eq(3).find(".calculator");
        calculator.show();
//        jQuery(this).html('<button type="button" title="<?php //echo $this->__('Add to Cart') ?>//" class="button btn-cart" onclick="setLocation(' + "'<?php //echo $this->getAddToCartUrl($_product) ?>//'" + ')"><span><span><?php //echo $this->__('Ready') ?>//</span></span></button>');
        jQuery(this).html('<button type="button" title="<?php echo $buttonTitle ?>" class="button btn-cart" onclick="productAddToCartForm.submit(this)"><span><span><?php echo $this->__('Ready') ?></span></span></button>');

    });

    function toggle_visibility(id) {
        var element = document.getElementById(id);
        if (element.style.display == 'block') {
            element.style.display = 'none';
        }else {
            element.style.display = 'block';
        }
    }

    function addFragment(productId, fragmentValue, addToCartUrl) {
        var fragmentsHtml = [];
        var fragmentInput = parseInt(fragmentValue);
        if ((fragmentInput!='') && (fragmentInput > 0)) {
            // check for max fragment
            if (fragmentInput > parseInt(jQuery("#max_fragment_"+productId).val())) {
                alert('The maximum fragment length was exceeded, please enter a smaller value.');
                return false;
            }

            var fragmentsBox = jQuery("#display_"+productId);
            if (jQuery("#fragment_values_"+productId).val()!='') {
                var fragmentValues = jQuery("#fragment_values_"+productId).val().split(',');
            } else {
                var fragmentValues = [];
            }
            fragmentValues.push(fragmentInput);

            var amount = 0;
            jQuery.each( fragmentValues, function( i, val ) {
                fragmentsHtml.push('<span class="fragment-value-'+productId+'" onclick="deleteFragment(this, '+productId+', \''+addToCartUrl+'\')">'+val+'</span>');
                amount+=parseInt(val);
            });
            // check for the fragment amount
            if (amount > parseInt(jQuery("#fragments_amount_"+productId).val())) {
                alert('The total fragments length was exceeded, please enter a smaller value.');
                return false;
            }

            jQuery("#fragment_"+productId).val('');
            fragmentsBox.html(fragmentsHtml.join(" "));
            jQuery("#fragment_values_"+productId).val(fragmentValues.join(','));
            fragmentsUrl = "'" + addToCartUrl + 'fragments/' + fragmentValues + "'";
            jQuery(".btn-cart").attr("onclick", 'setLocation(' + fragmentsUrl + ')');
            updatePriceTable(amount, productId);
        }
    }

    function deleteFragment(element, productId, addToCartUrl) {
        jQuery(element).remove();
        var fragments = [];
        var amount = 0;
        jQuery('.fragment-value-'+productId).each(function() {
            fragments.push(jQuery(this).html());
            amount+=parseInt(jQuery(this).html());
        });
        jQuery("#fragment_values_"+productId).val(fragments.join(','));
        fragmentsUrl = "'" + addToCartUrl + 'fragments/' + fragments + "'";
        jQuery(".btn-cart").attr("onclick", 'setLocation(' + fragmentsUrl + ')');
        updatePriceTable(amount, productId);
    };

    function updatePriceTable(amount, productId) {
        var price = jQuery("#price_"+productId).val();
        var priceWithoutTax = jQuery("#price_without_tax_"+productId).val();
        var totalPrice = (amount * price).toFixed(2);
        var totalPriceWithoutTax = (amount * priceWithoutTax).toFixed(2);
//        Temporarily commented out
//        jQuery("#netto_price_"+productId).html('<b>' + totalPriceWithoutTax + '</b>');
//        jQuery("#brutto_price_"+productId).html('<b>' + totalPrice + '</b>');
        jQuery("#netto_custom_price_"+productId).html(totalPriceWithoutTax);
        jQuery("#brutto_custom_price_"+productId).html(totalPrice);
    }

    jQuery(".fragment-input").keydown(function(event) {
        // Allow only backspace and delete
        if ( event.keyCode == 46 || event.keyCode == 8 || event.keyCode == 9 ) {
            // let it happen, don't do anything
        }
        else {
            // Ensure that it is a number and stop the keypress
            if ((event.keyCode < 48 || event.keyCode > 57) && (event.keyCode < 96 || event.keyCode > 105 )) {
                event.preventDefault();
            }
        }
    });
</script>