<?php
/**
 * Magento
 *
 * NOTICE OF LICENSE
 *
 * This source file is subject to the Academic Free License (AFL 3.0)
 * that is bundled with this package in the file LICENSE_AFL.txt.
 * It is also available through the world-wide-web at this URL:
 * http://opensource.org/licenses/afl-3.0.php
 * If you did not receive a copy of the license and are unable to
 * obtain it through the world-wide-web, please send an email
 * to license@magento.com so we can send you a copy immediately.
 *
 * DISCLAIMER
 *
 * Do not edit or add to this file if you wish to upgrade Magento to newer
 * versions in the future. If you wish to customize Magento for your
 * needs please refer to http://www.magento.com for more information.
 *
 * @category    design
 * @package     rwd_default
 * @copyright   Copyright (c) 2006-2014 X.commerce, Inc. (http://www.magento.com)
 * @license     http://opensource.org/licenses/afl-3.0.php  Academic Free License (AFL 3.0)
 */
?>
<?php
/**
 * Product list template
 *
 * @see Mage_Catalog_Block_Product_List
 */
/* @var $this Mage_Catalog_Block_Product_List */
?>
<?php
$_productCollection=$this->getLoadedProductCollection();
$_helper = $this->helper('catalog/output');
?>
<?php if(!$_productCollection->count()): ?>
    <p class="note-msg"><?php echo $this->__('There are no products matching the selection.') ?></p>
<?php else: ?>
    <div class="category-products">
        <?php echo $this->getToolbarHtml() ?>
        <?php // List mode ?>
        <?php if($this->getMode()!='grid'): ?>
            <?php $_iterator = 0; ?>
            <ol class="products-list" id="products-list">
                <?php foreach ($_productCollection as $_product): ?>
                    <li class="item<?php if( ++$_iterator == sizeof($_productCollection) ): ?> last<?php endif; ?>">
                        <?php // Product Image ?>
                        <a href="<?php echo $_product->getProductUrl() ?>" title="<?php echo $this->stripTags($this->getImageLabel($_product, 'small_image'), null, true) ?>" class="product-image">
                            <?php /* Based on the native RWD styling, product images are displayed at a max of ~400px wide when viewed on a
                        one column page layout with four product columns from a 1280px viewport. For bandwidth reasons,
                        we are going to serve a 300px image, as it will look fine at 400px and most of the times, the image
                        will be displayed at a smaller size (eg, if two column are being used or viewport is smaller than 1280px).
                        This $_imgSize value could even be decreased further, based on the page layout
                        (one column, two column, three column) and number of product columns. */ ?>
                            <?php $_imgSize = 300; ?>
                            <img id="product-collection-image-<?php echo $_product->getId(); ?>"
                                 src="<?php echo $this->helper('catalog/image')->init($_product, 'small_image')->keepFrame(false)->resize($_imgSize); ?>"
                                 alt="<?php echo $this->stripTags($this->getImageLabel($_product, 'small_image'), null, true) ?>" />
                        </a>
                        <?php // Product description ?>
                        <div class="product-shop">
                            <div class="f-fix">
                                <div class="product-primary">
                                    <?php $_productNameStripped = $this->stripTags($_product->getName(), null, true); ?>
                                    <h2 class="product-name"><a href="<?php echo $_product->getProductUrl() ?>" title="<?php echo $_productNameStripped; ?>"><?php echo $_helper->productAttribute($_product, $_product->getName() , 'name'); ?></a></h2>
                                    <?php if($_product->getRatingSummary()): ?>
                                        <?php echo $this->getReviewsSummaryHtml($_product) ?>
                                    <?php endif; ?>
                                    <?php
                                    // Provides extra blocks on which to hang some features for products in the list
                                    // Features providing UI elements targeting this block will display directly below the product name
                                    if ($this->getChild('name.after')) {
                                        $_nameAfterChildren = $this->getChild('name.after')->getSortedChildren();
                                        foreach ($_nameAfterChildren as $_nameAfterChildName) {
                                            $_nameAfterChild = $this->getChild('name.after')->getChild($_nameAfterChildName);
                                            $_nameAfterChild->setProduct($_product);
                                            echo $_nameAfterChild->toHtml();
                                        }
                                    }
                                    ?>
                                </div>
                                <div class="product-secondary">
                                    <?php echo $this->getPriceHtml($_product, true) ?>
                                </div>
                                <div class="product-secondary">
                                    <?php if(!$_product->canConfigure() && $_product->isSaleable()): ?>
                                        <?php if($_product->getTypeId() == 'fragmentary'): ?>
                                            <p class="action add-to-cart-calc-list"><button type="button" title="<?php echo $this->__('Add to Cart') ?>" class="button btn-cart-calc"><span><span><?php echo $this->__('Add to Cart') ?></span></span></button></p>
                                        <?php else: ?>
                                            <p class="action"><button type="button" title="<?php echo $this->__('Add to Cart') ?>" class="button btn-cart" onclick="setLocation('<?php echo $this->getAddToCartUrl($_product) ?>')"><span><span><?php echo $this->__('Add to Cart') ?></span></span></button></p>
                                        <?php endif; ?>
                                        <?php elseif($_product->getStockItem() && $_product->getStockItem()->getIsInStock()): ?>
                                        <p class="action"><a title="<?php echo $this->__('View Details') ?>" class="button" href="<?php echo $_product->getProductUrl() ?>"><?php echo $this->__('View Details') ?></a></p>
                                    <?php else: ?>
                                        <p class="action availability out-of-stock"><span><?php echo $this->__('Out of stock') ?></span></p>
                                    <?php endif; ?>
                                    <ul class="add-to-links">
                                        <?php if ($this->helper('wishlist')->isAllow()) : ?>
                                            <li><a href="<?php echo $this->helper('wishlist')->getAddUrl($_product) ?>" class="link-wishlist"><?php echo $this->__('Add to Wishlist') ?></a></li>
                                        <?php endif; ?>
                                        <?php if($_compareUrl=$this->getAddToCompareUrl($_product)): ?>
                                            <li><span class="separator">|</span> <a href="<?php echo $_compareUrl ?>" class="link-compare"><?php echo $this->__('Add to Compare') ?></a></li>
                                        <?php endif; ?>
                                    </ul>
                                </div>
                                <div class="desc std">
                                    <?php echo $_helper->productAttribute($_product, $_product->getShortDescription(), 'short_description') ?>
                                    <a href="<?php echo $_product->getProductUrl() ?>" title="<?php echo $_productNameStripped ?>" class="link-learn"><?php echo $this->__('Learn More') ?></a>
                                </div>
                            </div>
                            <?php if($_product->getTypeId() == 'fragmentary'): ?>
                                <div class="calculator-list" style="background: grey;color: #000;margin: 85px 0 1px 0;display: none;">
                                    <?php echo $this->getChild('calculator')->setProduct($_product)->toHtml() ?>
                                </div>
                            <?php endif; ?>
                        </div>
                    </li>
                <?php endforeach; ?>
            </ol>
            <script type="text/javascript">decorateList('products-list', 'none-recursive')</script>

        <?php else: ?>

        <?php // Grid Mode ?>

        <?php $_collectionSize = $_productCollection->count() ?>
        <?php $_columnCount = $this->getColumnCount(); ?>
            <ul class="products-grid products-grid--max-<?php echo $_columnCount; ?>-col">
                <?php $i=0; foreach ($_productCollection as $_product): ?>
                    <?php /*if ($i++%$_columnCount==0): ?>
            <?php endif*/ ?>
                    <li class="item<?php if(($i-1)%$_columnCount==0): ?> first<?php elseif($i%$_columnCount==0): ?> last<?php endif; ?>">
                        <a href="<?php echo $_product->getProductUrl() ?>" title="<?php echo $this->stripTags($this->getImageLabel($_product, 'small_image'), null, true) ?>" class="product-image">
                            <?php $_imgSize = 210; ?>
                            <img id="product-collection-image-<?php echo $_product->getId(); ?>"
                                 src="<?php echo $this->helper('catalog/image')->init($_product, 'small_image')->resize($_imgSize); ?>"
                                 alt="<?php echo $this->stripTags($this->getImageLabel($_product, 'small_image'), null, true) ?>" />
                        </a>
                        <div class="product-info">
                            <h2 class="product-name"><a href="<?php echo $_product->getProductUrl() ?>" title="<?php echo $this->stripTags($_product->getName(), null, true) ?>"><?php echo $_helper->productAttribute($_product, $_product->getName(), 'name') ?></a></h2>
                            <?php
                            // Provides extra blocks on which to hang some features for products in the list
                            // Features providing UI elements targeting this block will display directly below the product name
                            if ($this->getChild('name.after')) {
                                $_nameAfterChildren = $this->getChild('name.after')->getSortedChildren();
                                foreach ($_nameAfterChildren as $_nameAfterChildName) {
                                    $_nameAfterChild = $this->getChild('name.after')->getChild($_nameAfterChildName);
                                    $_nameAfterChild->setProduct($_product);
                                    echo $_nameAfterChild->toHtml();
                                }
                            }
                            ?>
                            <?php echo $this->getPriceHtml($_product, true) ?>
                            <?php if($_product->getRatingSummary()): ?>
                                <?php echo $this->getReviewsSummaryHtml($_product, 'short') ?>
                            <?php endif; ?>
                            <div class="actions">
                                <?php if(!$_product->canConfigure() && $_product->isSaleable()): ?>
                                    <?php if($_product->getTypeId() == 'fragmentary'): ?>
                                        <p class="action add-to-cart-calc-grid"><button type="button" title="<?php echo $this->__('Add to Cart') ?>" class="button btn-cart-calc"><span><span><?php echo $this->__('Add to Cart') ?></span></span></button></p>
                                    <?php else: ?>
                                        <button type="button" title="<?php echo $this->__('Add to Cart') ?>" class="button btn-cart" onclick="setLocation('<?php echo $this->getAddToCartUrl($_product) ?>')"><span><span><?php echo $this->__('Add to Cart') ?></span></span></button>
                                    <?php endif; ?>
                                <?php elseif($_product->getStockItem() && $_product->getStockItem()->getIsInStock()): ?>
                                    <a title="<?php echo $this->__('View Details') ?>" class="button" href="<?php echo $_product->getProductUrl() ?>"><?php echo $this->__('View Details') ?></a>
                                <?php else: ?>
                                    <p class="availability out-of-stock"><span><?php echo $this->__('Out of stock') ?></span></p>
                                <?php endif; ?>
                                <ul class="add-to-links">
                                    <?php if ($this->helper('wishlist')->isAllow()) : ?>
                                        <li><a href="<?php echo $this->helper('wishlist')->getAddUrl($_product) ?>" class="link-wishlist"><?php echo $this->__('Add to Wishlist') ?></a></li>
                                    <?php endif; ?>
                                    <?php if($_compareUrl=$this->getAddToCompareUrl($_product)): ?>
                                        <li><span class="separator">|</span> <a href="<?php echo $_compareUrl ?>" class="link-compare"><?php echo $this->__('Add to Compare') ?></a></li>
                                    <?php endif; ?>
                                </ul>
                            </div>
                        </div>
                        <?php if($_product->getTypeId() == 'fragmentary'): ?>
                            <div class="calculator-grid" style="background: grey;color: #000;display: none;">
                                <?php echo $this->getChild('calculator')->setProduct($_product)->toHtml() ?>
                            </div>
                        <?php endif; ?>
                    </li>
                    <?php /*if ($i%$_columnCount==0 || $i==$_collectionSize): ?>
            <?php endif*/ ?>
                <?php endforeach ?>
            </ul>
            <script type="text/javascript">decorateGeneric($$('ul.products-grid'), ['odd','even','first','last'])</script>
        <?php endif; ?>

        <div class="toolbar-bottom">
            <?php echo $this->getToolbarHtml() ?>
        </div>
    </div>
<?php endif; ?>
<?php
// Provides a block where additional page components may be attached, primarily good for in-page JavaScript
if ($this->getChild('after')) {
    $_afterChildren = $this->getChild('after')->getSortedChildren();
    foreach ($_afterChildren as $_afterChildName) {
        $_afterChild = $this->getChild('after')->getChild($_afterChildName);
        //set product collection on after blocks
        $_afterChild->setProductCollection($_productCollection);
        echo $_afterChild->toHtml();
    }
}
?>
<script type="text/javascript">
    var fragmentsUrl = "'" + '<?php echo $this->getAddToCartUrl($_product) ?>' + "'";
    jQuery(".add-to-cart-calc-list").click(function(){
        var calculator = jQuery(this).parents().eq(3).find(".calculator-list");
        calculator.show();
        jQuery(this).html('<p class="action"><button type="button" title="<?php echo $this->__('Add to Cart') ?>" class="button btn-cart" onclick="setLocation(' + "'<?php echo $this->getAddToCartUrl($_product) ?>'" + ')"><span><span><?php echo $this->__('Ready') ?></span></span></button></p>');
    });

    jQuery(".add-to-cart-calc-grid").click(function(){
        var calculator = jQuery(this).parents().eq(2).find(".calculator-grid");
        calculator.show();
        jQuery(this).html('<button type="button" title="<?php echo $this->__('Add to Cart') ?>" class="button btn-cart" onclick="setLocation(' + "'<?php echo $this->getAddToCartUrl($_product) ?>'" + ')"><span><span><?php echo $this->__('Ready') ?></span></span></button>');
    });

    function toggle_visibility(id) {
        var element = document.getElementById(id);
        if (element.style.display == 'block') {
            element.style.display = 'none';
        }else {
            element.style.display = 'block';
        }
    }

    function addFragment(productId, fragmentValue, addToCartUrl) {
        var fragmentsHtml = [];
        var fragmentInput = parseInt(fragmentValue);
        if ((fragmentInput!='') && (fragmentInput > 0)) {
            // check for max fragment
            if (fragmentInput > parseInt(jQuery("#max_fragment_"+productId).val())) {
                alert('The maximum fragment length was exceeded, please enter a smaller value.');
                return false;
            }

            var fragmentsBox = jQuery("#display_"+productId);
            if (jQuery("#fragment_values_"+productId).val()!='') {
                var fragmentValues = jQuery("#fragment_values_"+productId).val().split(',');
            } else {
                var fragmentValues = [];
            }
            fragmentValues.push(fragmentInput);

            var amount = 0;
            jQuery.each( fragmentValues, function( i, val ) {
                fragmentsHtml.push('<span class="fragment-value-'+productId+'" onclick="deleteFragment(this, '+productId+', \''+addToCartUrl+'\')">'+val+'</span>');
                amount+=parseInt(val);
            });
            // check for the fragment amount
            if (amount > parseInt(jQuery("#fragments_amount_"+productId).val())) {
                alert('The total fragments length was exceeded, please enter a smaller value.');
                return false;
            }

            jQuery("#fragment_"+productId).val('');
            fragmentsBox.html(fragmentsHtml.join(" "));
            jQuery("#fragment_values_"+productId).val(fragmentValues.join(','));
            fragmentsUrl = "'" + addToCartUrl + 'fragments/' + fragmentValues + "'";
            jQuery(".btn-cart").attr("onclick", 'setLocation(' + fragmentsUrl + ')');
            updatePriceTable(amount, productId);
        }
    }

    function deleteFragment(element, productId, addToCartUrl) {
        jQuery(element).remove();
        var fragments = [];
        var amount = 0;
        jQuery('.fragment-value-'+productId).each(function() {
            fragments.push(jQuery(this).html());
            amount+=parseInt(jQuery(this).html());
        });
        jQuery("#fragment_values_"+productId).val(fragments.join(','));
        fragmentsUrl = "'" + addToCartUrl + 'fragments/' + fragments + "'";
        jQuery(".btn-cart").attr("onclick", 'setLocation(' + fragmentsUrl + ')');
        updatePriceTable(amount, productId);
    };

    function updatePriceTable(amount, productId) {
        var price = jQuery("#price_"+productId).val();
        var priceWithoutTax = jQuery("#price_without_tax_"+productId).val();
        var totalPrice = (amount * price).toFixed(2);
        var totalPriceWithoutTax = (amount * priceWithoutTax).toFixed(2);
//        Temporarily commented out
//        jQuery("#netto_price_"+productId).html('<b>' + totalPriceWithoutTax + '</b>');
//        jQuery("#brutto_price_"+productId).html('<b>' + totalPrice + '</b>');
        jQuery("#netto_custom_price_"+productId).html(totalPriceWithoutTax);
        jQuery("#brutto_custom_price_"+productId).html(totalPrice);
    }

    jQuery(".fragment-input").keydown(function(event) {
        // Allow only backspace and delete
        if ( event.keyCode == 46 || event.keyCode == 8 || event.keyCode == 9 ) {
            // let it happen, don't do anything
        }
        else {
            // Ensure that it is a number and stop the keypress
            if ((event.keyCode < 48 || event.keyCode > 57) && (event.keyCode < 96 || event.keyCode > 105 )) {
                event.preventDefault();
            }
        }
    });
</script>